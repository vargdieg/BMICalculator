---
swagger: "2.0"
info:
  description: "API used to manage the user in the BMI user table"
  version: "2023-05-28T20:30:55Z"
  title: "BMIUserManagement"
host: "3c15e242i1.execute-api.us-east-1.amazonaws.com"
basePath: "/product"
schemes:
- "https"
paths:
  /createuser:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "RequestCreateUser"
        required: true
        schema:
          $ref: "#/definitions/RequestCreateUser"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseManageUser"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/ErrorResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/ErrorResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      security:
      - api_key: []
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /deleteuser:
    delete:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "RequestDeleteUser"
        required: true
        schema:
          $ref: "#/definitions/RequestDeleteUser"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseManageUser"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/ErrorResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/ErrorResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      security:
      - api_key: []
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /getuserinformation:
    get:
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseGetUserInformation"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/ErrorResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/ErrorResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /validateloggin:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "RequestValidateLoggin"
        required: true
        schema:
          $ref: "#/definitions/RequestValidateLoggin"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseValidateLoggin"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/ErrorResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/ErrorResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      security:
      - api_key: []
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "x-api-key"
    in: "header"
definitions:
  ResponseManageUser:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "string"
        description: "http status code"
      name:
        type: "string"
        description: "this is the name of the HTTP Status code"
      message:
        type: "string"
        description: "This is the message to show to the user if necessary"
    title: "ResponseGetOpinion"
    description: "Get opinion response schema"
  Empty:
    type: "object"
    title: "Empty Schema"
  ResponseGetUserInformation:
    type: "object"
    required:
    - "code"
    - "message"
    - "name"
    properties:
      code:
        type: "string"
        description: "http status code"
      name:
        type: "string"
        description: "this is the name of the HTTP Status code"
      message:
        type: "string"
        description: "This is the message to show to the user if necessary"
      data:
        type: "object"
        properties:
          username:
            type: "string"
            description: "the username of the client"
          email:
            type: "string"
            description: "the email of the registered user"
    title: "ResponseGetOpinion"
    description: "Schema for retrieving the user information"
  RequestDeleteUser:
    type: "object"
    required:
    - "id"
    - "region"
    properties:
      region:
        type: "string"
        description: "Region where the table is stored"
      id:
        type: "string"
        description: "unique identifier of the user"
    title: "RequestDeleteUser"
    description: "Delete user request schema"
  RequestCreateUser:
    type: "object"
    required:
    - "customerEmail"
    - "customerIdentification"
    - "customerName"
    - "customerPassword"
    - "region"
    properties:
      customerName:
        type: "string"
        description: "username of the person"
      customerPassword:
        type: "string"
        description: "Password of the user to be created"
      customerEmail:
        type: "string"
        description: "email of the person to be created"
      customerIdentification:
        type: "string"
        description: "uuid of the user to be created"
      region:
        type: "string"
        description: "region in which the table is deployed"
    title: "ErrorResponse"
    description: "error response schema"
  RequestValidateLoggin:
    type: "object"
    required:
    - "customerName"
    - "customerPassword"
    - "region"
    properties:
      customerName:
        type: "string"
        description: "username of the person"
      customerPassword:
        type: "string"
        description: "Password of the user to be created"
      region:
        type: "string"
        description: "region in which the table is deployed"
    title: "ValidateLogginSchema"
    description: "schema for validate and authenticate user"
  ResponseValidateLoggin:
    type: "object"
    properties:
      code:
        type: "string"
        description: "http status code"
      name:
        type: "string"
        description: "this is the name of the HTTP Status code"
      message:
        type: "string"
        description: "This is the message to show to the user if necessary"
      data:
        type: "string"
        description: "identifier of the user"
    title: "ResponseGetOpinion"
    description: "Get opinion response schema"
  ErrorResponse:
    type: "object"
    required:
    - "error"
    - "message"
    - "name"
    properties:
      name:
        type: "string"
        description: "Name of the error"
      message:
        type: "string"
        description: "Description of the error"
      user_message:
        type: "string"
        description: "Message error to show to the user"
      error:
        type: "object"
        description: "errorcode"
        properties:
          errorCode:
            type: "string"
            description: "http status error code"
          TypeOfError:
            type: "string"
            description: "If the error is a thecnical error or an 8 layer error"
    title: "ErrorResponse"
    description: "error response schema"
