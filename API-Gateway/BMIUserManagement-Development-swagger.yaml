---
swagger: "2.0"
info:
  description: "API used to manage the user in the BMI user table"
  version: "2022-11-13T12:55:27Z"
  title: "BMIUserManagement"
host: "3c15e242i1.execute-api.us-east-1.amazonaws.com"
basePath: "/Development"
schemes:
- "https"
paths:
  /createuser:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "RequestCreateUser"
        required: true
        schema:
          $ref: "#/definitions/RequestCreateUser"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseManageUser"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/ErrorResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/ErrorResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /deleteuser:
    delete:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "RequestDeleteUser"
        required: true
        schema:
          $ref: "#/definitions/RequestDeleteUser"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseManageUser"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/ErrorResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/ErrorResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /updateuser:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "RequestUpdateUser"
        required: true
        schema:
          $ref: "#/definitions/RequestUpdateUser"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseManageUser"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/ErrorResponse"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /user:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "region"
        in: "query"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseListUsers"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/ErrorResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/ErrorResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /user/{username+}:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        required: true
        type: "string"
      - name: "region"
        in: "query"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseValidateUser"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/ErrorResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/ErrorResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /{id+}:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "region"
        in: "query"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseGetUser"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/ErrorResponse"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
definitions:
  ResponseListUsers:
    type: "object"
    required:
    - "Code"
    - "Item"
    properties:
      Code:
        type: "string"
        description: "http status of the request"
      Item:
        type: "array"
        items:
          type: "object"
          properties:
            CUSTOMER_NAME:
              type: "string"
              description: "name of the user"
            CUSTOMER_EMAIL:
              type: "string"
              description: "email of the user"
            CUSTOMER_IDENTIFICATION:
              type: "string"
              description: "identifier of the user"
    title: "ResponseListUsers"
    description: "get all users response schema"
  ResponseManageUser:
    type: "object"
    required:
    - "Code"
    properties:
      Code:
        type: "string"
        description: "http status code"
    title: "ResponseManageUser"
    description: "Response schema for create - delete and update user info"
  Empty:
    type: "object"
    title: "Empty Schema"
  ResponseValidateUser:
    type: "object"
    required:
    - "CUSTOMER_IDENTIFICATION"
    - "CUSTOMER_NAME"
    - "CUSTOMER_PASSWORD"
    properties:
      CUSTOMER_NAME:
        type: "string"
        description: "Username"
      CUSTOMER_PASSWORD:
        type: "string"
        description: "Password of the user"
      CUSTOMER_IDENTIFICATION:
        type: "string"
        description: "Identifier of the user"
    title: "ResponseValidateUser"
    description: "Response Schema of loggin"
  RequestUpdateUser:
    type: "object"
    required:
    - "fieldToChange"
    - "id"
    - "newValue"
    - "region"
    properties:
      region:
        type: "string"
        description: "Region where the table is stored"
      id:
        type: "string"
        description: "unique identifier of the opinion"
      fieldToChange:
        type: "string"
        description: "which field is going to be changed"
        enum:
        - "CUSTOMER_NAME"
        - "CUSTOMER_EMAIL"
        - "CUSTOMER_IDENTIFICATION"
        - "CUSTOMER_PASSWORD"
      newValue:
        type: "string"
        description: "New value to be stored"
    title: "RequestUpdateUser"
    description: "Update user request schema"
  ResponseGetUser:
    type: "object"
    required:
    - "Code"
    - "Item"
    properties:
      Code:
        type: "string"
        description: "http code response"
      Item:
        type: "object"
        description: "user data"
        properties:
          CUSTOMER_NAME:
            type: "string"
            description: "user name"
          CUSTOMER_EMAIL:
            type: "string"
            description: "user email"
          CUSTOMER_IDENTIFICATION:
            type: "string"
            description: "user id"
          CUSTOMER_PASSWORD:
            type: "string"
            description: "user current password"
    title: "ResponseGetUser"
    description: "Get user response schema"
  RequestDeleteUser:
    type: "object"
    required:
    - "id"
    - "region"
    properties:
      region:
        type: "string"
        description: "Region where the table is stored"
      id:
        type: "string"
        description: "unique identifier of the user"
    title: "RequestDeleteUser"
    description: "Delete user request schema"
  RequestCreateUser:
    type: "object"
    required:
    - "customerEmail"
    - "customerIdentification"
    - "customerName"
    - "customerPassword"
    - "region"
    properties:
      region:
        type: "string"
        description: "Region where the table is stored"
      customerName:
        type: "string"
        description: "Name of the registered user"
      customerPassword:
        type: "string"
        description: "password used to loggin into the application"
      customerEmail:
        type: "string"
        description: "email of the customer"
      customerIdentification:
        type: "string"
        description: "unique identifier of the user"
    title: "RequestCreateUser"
    description: "Create user request schema"
  ErrorResponse:
    type: "object"
    required:
    - "error"
    - "message"
    - "name"
    properties:
      name:
        type: "string"
        description: "Name of the error"
      message:
        type: "string"
        description: "Description of the error"
      error:
        type: "object"
        description: "errorcode"
        properties:
          errorCode:
            type: "string"
            description: "http status error code"
    title: "ErrorResponse"
    description: "error response schema"
